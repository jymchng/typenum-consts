error: failed to read `BAD_SECRET` key from the environment, err = environment variable not found
 --> trybuild_tests/compile_fails/test_dotenv_fail.rs:4:30
  |
4 |     type A = tnconst![+ env!("BAD_SECRET");];
  |                              ^^^^^^^^^^^^

error: path cannot be empty
 --> trybuild_tests/compile_fails/test_dotenv_fail.rs:5:44
  |
5 |     type B = tnconst![+ env!("BAD_SECRET", "");];
  |                                            ^^

error: expected string literal
 --> trybuild_tests/compile_fails/test_dotenv_fail.rs:6:43
  |
6 |     type C = tnconst![+ env!("BAD_SECRET",,);];
  |                                           ^

error: expected string literal
 --> trybuild_tests/compile_fails/test_dotenv_fail.rs:7:30
  |
7 |     type D = tnconst![+ env!(,,"BAD_SECRET");];
  |                              ^

error: unexpected end of input, expected string literal
 --> trybuild_tests/compile_fails/test_dotenv_fail.rs:8:34
  |
8 |     type E = tnconst![+ env!("", );];
  |                                  ^

error: key cannot be empty
 --> trybuild_tests/compile_fails/test_dotenv_fail.rs:9:30
  |
9 |     type F = tnconst![+ env!("", "");];
  |                              ^^

error: expected integer literal
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:10:23
   |
10 |     type G = tnconst![% env!("", "");];
   |                       ^

error: VarDoesNotExist("lame")
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:13:9
   |
13 |         lame;
   |         ^^^^

error: failed to read `BAD_SECRET` key from the environment, err = environment variable not found
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:21:29
   |
21 |     type A = pconst![+ env!("BAD_SECRET");];
   |                             ^^^^^^^^^^^^

error: path cannot be empty
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:22:43
   |
22 |     type B = pconst![+ env!("BAD_SECRET", "");];
   |                                           ^^

error: expected string literal
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:23:42
   |
23 |     type C = pconst![+ env!("BAD_SECRET",,);];
   |                                          ^

error: expected string literal
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:24:29
   |
24 |     type D = pconst![+ env!(,,"BAD_SECRET");];
   |                             ^

error: unexpected end of input, expected string literal
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:25:33
   |
25 |     type E = pconst![+ env!("", );];
   |                                 ^

error: key cannot be empty
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:26:29
   |
26 |     type F = pconst![+ env!("", "");];
   |                             ^^

error: expected integer literal
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:27:22
   |
27 |     type G = pconst![% env!("", "");];
   |                      ^

error: expected `;`
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:29:29
   |
29 |     type J = pconst![+ 6969 {};];
   |                             ^

error: expected `;`
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:30:29
   |
30 |     type K = pconst![+ 6969 {}];
   |                             ^

error: VarDoesNotExist("lame")
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:35:9
   |
35 |         lame;
   |         ^^^^

error: failed to read `BAD_SECRET` key from the environment, err = environment variable not found
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:43:29
   |
43 |     type A = nconst![- env!("BAD_SECRET");];
   |                             ^^^^^^^^^^^^

error: path cannot be empty
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:44:43
   |
44 |     type B = nconst![- env!("BAD_SECRET", "");];
   |                                           ^^

error: expected string literal
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:45:42
   |
45 |     type C = nconst![- env!("BAD_SECRET",,);];
   |                                          ^

error: expected string literal
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:46:29
   |
46 |     type D = nconst![- env!(,,"BAD_SECRET");];
   |                             ^

error: unexpected end of input, expected string literal
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:47:33
   |
47 |     type E = nconst![- env!("", );];
   |                                 ^

error: key cannot be empty
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:48:29
   |
48 |     type F = nconst![- env!("", "");];
   |                             ^^

error: expected integer literal
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:49:22
   |
49 |     type G = nconst![% env!("", "");];
   |                      ^

error: expected `;`
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:51:29
   |
51 |     type J = nconst![- 6969 {};];
   |                             ^

error: expected `;`
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:52:29
   |
52 |     type K = nconst![- 6969 {}];
   |                             ^

error: VarDoesNotExist("lame")
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:57:9
   |
57 |         lame;
   |         ^^^^

error: unexpected end of input, the content within the block delimited by `{...}` must not be empty
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:59:24
   |
59 |     type M = nconst![-{}];
   |                        ^

error: failed to read `BAD_SECRET` key from the environment, err = environment variable not found
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:66:28
   |
66 |     type A = uconst![ env!("BAD_SECRET");];
   |                            ^^^^^^^^^^^^

error: path cannot be empty
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:67:42
   |
67 |     type B = uconst![ env!("BAD_SECRET", "");];
   |                                          ^^

error: expected string literal
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:68:41
   |
68 |     type C = uconst![ env!("BAD_SECRET",,);];
   |                                         ^

error: expected string literal
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:69:28
   |
69 |     type D = uconst![ env!(,,"BAD_SECRET");];
   |                            ^

error: unexpected end of input, expected string literal
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:70:32
   |
70 |     type E = uconst![ env!("", );];
   |                                ^

error: key cannot be empty
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:71:28
   |
71 |     type F = uconst![ env!("", "");];
   |                            ^^

error: expected integer literal
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:72:22
   |
72 |     type G = uconst![% env!("", "");];
   |                      ^

error: expected `;`
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:74:28
   |
74 |     type J = uconst![ 6969 {};];
   |                            ^

error: expected `;`
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:75:28
   |
75 |     type K = uconst![ 6969 {}];
   |                            ^

error: VarDoesNotExist("lame")
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:80:9
   |
80 |         lame;
   |         ^^^^

error: using `uconst![...]` but the inputs to the macro results in an positive literal integer
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:82:24
   |
82 |     type N = uconst![+ 6969;];
   |                        ^^^^

error: using `uconst![...]` but the inputs to the macro results in an negative literal integer
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:83:24
   |
83 |     type M = uconst![- 6969;];
   |                        ^^^^

error: using `uconst![...]` but the inputs to the macro results in an positive literal integer
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:84:24
   |
84 |     type O = uconst![+ env!("ENV_VAR");]; // Read from environment, get a literal int => typenum::PInt
   |                        ^^^

error: expressions should be evaluated to a non-negative or positive integer, got `-6869` instead
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:86:9
   |
86 |         100 - 6969;
   |         ^^^

error[E0277]: the trait bound `PInt<UTerm>: Unsigned` is not satisfied
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:32:17
   |
32 |     assert_eq!(<L as typenum::Unsigned>::USIZE, 0);
   |                 ^ the trait `Unsigned` is not implemented for `PInt<UTerm>`
   |
   = help: the following other types implement trait `Unsigned`:
             UInt<U, B>
             UTerm

error[E0277]: the trait bound `UTerm: NonZero` is not satisfied
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:32:17
   |
32 |     assert_eq!(<L as typenum::Unsigned>::USIZE, 0);
   |                 ^ the trait `NonZero` is not implemented for `UTerm`
   |
   = help: the following other types implement trait `NonZero`:
             B1
             PInt<U>
             NInt<U>
             UInt<U, B>
note: required by a bound in `PInt`
  --> $CARGO/typenum-1.17.0/src/int.rs
   |
   | pub struct PInt<U: Unsigned + NonZero> {
   |                               ^^^^^^^ required by this bound in `PInt`

error[E0277]: the trait bound `NInt<UTerm>: Unsigned` is not satisfied
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:54:17
   |
54 |     assert_eq!(<L as typenum::Unsigned>::USIZE, 0);
   |                 ^ the trait `Unsigned` is not implemented for `NInt<UTerm>`
   |
   = help: the following other types implement trait `Unsigned`:
             UInt<U, B>
             UTerm

error[E0277]: the trait bound `UTerm: NonZero` is not satisfied
  --> trybuild_tests/compile_fails/test_dotenv_fail.rs:54:17
   |
54 |     assert_eq!(<L as typenum::Unsigned>::USIZE, 0);
   |                 ^ the trait `NonZero` is not implemented for `UTerm`
   |
   = help: the following other types implement trait `NonZero`:
             B1
             PInt<U>
             NInt<U>
             UInt<U, B>
note: required by a bound in `NInt`
  --> $CARGO/typenum-1.17.0/src/int.rs
   |
   | pub struct NInt<U: Unsigned + NonZero> {
   |                               ^^^^^^^ required by this bound in `NInt`
